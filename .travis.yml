language: generic
os:
- linux
- osx
env:
  matrix:
  - CONDA_ENV=3.7
  - CONDA_ENV=3.6
sudo: false
jobs:
  include:
  - stage: lint
    os: linux
    script:
    - make lint
  - stage: docs
    os: linux
    install:
    - conda env create --file docs/environment.yml
    - conda activate pymt_docs
    script:
    - sphinx-apidoc --force -o docs/api pymt *tests
    - make -C docs clean html
  - stage: deploy
    if: tag =~ v.*$
    script: skip
    os: linux
    deploy:
      on:
        all_branches: true
      provider: pypi
      user: mcflugen
      password:
        secure: B0w/bZarTtbtjXQZPyAUZeDCrMcHB+Fes8wrPPxTG+tBN0t/SqBaUv6LmKjX2JqKIS8+R3TCqidqryhrvnEj7kmhCOmc3yo88NOd5v2qwMINxb13/SecH7sKOKditpkvciIcAD7BmiPUCroMxcZL9UJieYPUJvfQAGthp8H4N9g=
before_install:
- |
  if [[ $TRAVIS_OS_NAME == "osx" ]]; then
    brew remove --force $(brew list)
    brew cleanup -s
    rm -rf $(brew --cache)
  fi
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    curl https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh > $HOME/miniconda.sh
  else
    curl https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh > $HOME/miniconda.sh
  fi
- bash $HOME/miniconda.sh -b -p $HOME/anaconda
- export PATH="$HOME/anaconda/bin:$PATH"
- hash -r
- conda config --set always_yes yes --set changeps1 no
- conda create -n test_env python=$CONDA_ENV
- source activate test_env
install:
- pip install numpy pytest pytest-cov flake8 coveralls
- conda install landlab esmpy -c conda-forge
- pip install .
script:
- pytest --cov=pymt --cov-report=xml:$(pwd)/coverage.xml -vvv
after_success: coveralls
